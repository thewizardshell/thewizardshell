name: Sync Assigned Issues to Board

on:
  schedule:
    - cron: "0 0 * * *" # Esto lo ejecutará todos los días a medianoche, ajusta el horario según sea necesario
  workflow_dispatch:

jobs:
  sync-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Obtener repositorios
        id: repos
        run: |
          repos=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/users/vicenteroa/repos?per_page=100 | jq -r '.[].full_name')
          echo "Repos: $repos"
          echo "repos=$repos" >> $GITHUB_ENV # Usamos un archivo de entorno para almacenar la variable

      - name: Listar Issues asignadas a mi usuario
        id: issues
        run: |
          issues=""
          for repo in ${{ env.repos }}; do
            repo_issues=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/$repo/issues?state=open&assignee=vicenteroa)
            if [ ! -z "$repo_issues" ]; then
              issues="$issues $repo_issues"
            fi
          done
          echo "Issues: $issues"
          echo "issues=$issues" >> $GITHUB_ENV

      - name: Agregar Issues al Board
        run: |
          board_id="PVT_kwHOBMPz284AuSzy"  # Aquí debes usar tu ID de Board de trabajo
          column_id="PVT_kwHOBMPz284AuSzj" # Aquí debes usar el ID de la columna en la que agregarás las issues
          for issue in ${{ env.issues }}; do
            issue_id=$(echo $issue | jq -r '.id')
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"contentId":"'"$issue_id"'", "contentType":"Issue"}' \
              https://api.github.com/projects/columns/$column_id/cards
          done
